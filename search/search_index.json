{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#about","title":"About","text":"<p>This is a personal documentation about ARM. The information is mostly taken from the ARM Developer Documentation, but other sources are used as well. The documentation is built with MkDocs Material and deployed on GitHub Pages.</p>"},{"location":"#motivation","title":"Motivation","text":"<p>Navigating a large field of study can be cumbersome at times. Having valuable information in one place that is easily navigatable makes things easier. This documentation is for the work I do and tailored to this specific use case. I made it public because others may be able to benefit from this documentation as well.</p>"},{"location":"introduction/","title":"Introduction","text":"<p>The ARM Architecture is integrated into a range of technologies, ranging from SoC devices (like smartphones), microcomputers, embedded devices, servers and even supercomputers. ARM exposes a common ISA &amp; worflow to help with interoperability across different implementations of the architecture.</p>"},{"location":"introduction/#what-actually-is-an-architecture","title":"What Actually Is an Architecture?","text":"<p>Definition: Architecture</p> <p>~ is a functional specification. In case of the Arm architecture, it's the functional specification of a processor. It specifies how a processor will behave, i.e. what instructions it has and what the instructions do. It is a contract between hardware and software, specifying what functionality software can rely on the hardware to provide. Some features are optional, see this subsection.</p>"},{"location":"introduction/#architecture-vs-microarchitecture","title":"Architecture vs. Microarchitecture","text":"<p>TODO</p>"},{"location":"introduction/#profiles","title":"Profiles","text":"<p>Profiles allow tailoring the architecture to different use cases while sharing several base features. There are three profiles:</p> <ol> <li>A (Application): high-performance | complex (operating) systems</li> <li>R (Real-Time): common in infrastructure with real-time demands | networking &amp; embedded devices</li> <li>M (Microcontroller): small but highly power efficient | IoT devices</li> </ol>"},{"location":"terminology/","title":"Terminology","text":"<p>ARM has a lot of special terminology, and getting it right is crucial to understanding what the documentation describes. The following table provides an overview of the most popular terms.</p> Term Usually Referref to as Acronym Base Root Requirements BSR Base System Architecture BSA common ISA &amp; workflow Programmer's Model Instruction Set Architecture ISA processor core Processing Element PE"},{"location":"hardware/","title":"Hardware","text":""},{"location":"virtualization/","title":"Virtualization","text":""}]}